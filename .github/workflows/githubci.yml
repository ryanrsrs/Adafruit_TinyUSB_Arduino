name: Build

on: [pull_request, push, repository_dispatch]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run pre-commit
      uses: pre-commit/action@v3.0.0

    - name: Checkout adafruit/ci-arduino
      uses: actions/checkout@v4
      with:
         repository: adafruit/ci-arduino
         path: ci

    - name: pre-install
      run: bash ci/actions_install.sh

#    - name: clang
#      run: python3 ci/run-clang-format.py -r src/arduino

    - name: doxygen
      env:
        GH_REPO_TOKEN: ${{ secrets.GH_REPO_TOKEN }}
        PRETTYNAME : "Adafruit TinyUSB Library"
      run: bash ci/doxy_gen_and_deploy.sh

  build:
    runs-on: ubuntu-latest
    needs: pre-commit
    strategy:
      fail-fast: false
      matrix:
        arduino-platform:
           # ESP32 ci use dev json
           - 'feather_esp32s2'
           - 'feather_esp32s3'
           # nRF52
           - 'cpb'
           - 'nrf52840'
           # RP2040
           - 'feather_rp2040_tinyusb'
           - 'pico_rp2040_tinyusb_host'
           # SAMD
           - 'metro_m0_tinyusb'
           - 'metro_m4_tinyusb'

    steps:
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Checkout adafruit/ci-arduino
      uses: actions/checkout@v4
      with:
         repository: adafruit/ci-arduino
         path: ci

    - name: pre-install
      run: bash ci/actions_install.sh

    - name: Install Libraries for building examples
      run: arduino-cli lib install "Adafruit SPIFlash" "MIDI Library" "Adafruit seesaw Library" "Adafruit NeoPixel" "SdFat - Adafruit Fork" "SD" "Adafruit Circuit Playground" "Adafruit InternalFlash" "Pico PIO USB"

    - name: test platforms
      run: python3 ci/build_platform.py ${{ matrix.arduino-platform }}

  build-esp32-stable:
    runs-on: ubuntu-latest
    needs: pre-commit
    strategy:
      fail-fast: false
      matrix:
        arduino-platform:
          # ESP32
          - 'feather_esp32s2'
          - 'feather_esp32s3'

    steps:
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout adafruit/ci-arduino
        uses: actions/checkout@v4
        with:
          repository: adafruit/ci-arduino
          ref: importable-build_platform
          path: ci

      - name: pre-install
        run: bash ci/actions_install.sh

      - name: Install arduino-esp32 stable and Libraries
        env:
          BSP_URLS: https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json
        run: |
          arduino-cli core install esp32:esp32 --additional-urls $BSP_URLS
          arduino-cli lib install "Adafruit SPIFlash" "MIDI Library" "Adafruit seesaw Library" "Adafruit NeoPixel" "SdFat - Adafruit Fork" "SD" "Adafruit Circuit Playground" "Adafruit InternalFlash" "Pico PIO USB"
          arduino-cli core list
          arduino-cli lib list

      - name: Create custom build script
        working-directory: ${{ github.workspace }}/ci
        run: |
          echo 'import build_platform' > build_esp32_stable.py
          echo 'build_platform.test_examples_in_folder("'${{ matrix.arduino-platform }}'")' >> build_esp32_v2.py

      - name: test platforms
        run: |
          python3 ci/build_esp32_stable.py
